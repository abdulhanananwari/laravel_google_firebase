{"version":3,"sources":["app/app.js","app/device/device.model.js","app/notification/notification.factory.js","app/topic/topic.factory.js","app/notification/directive/customer/notificationCustomer.directive.js","app/notification/directive/internal/notificationInternal.directive.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["var solumaxGoogleFirebasePlugins = angular\r\n.module('Solumax.GoogleFirebasePlugins', [])\r\n.run(function (DeviceModel, NotificationFactory, $rootScope) {\r\n\r\n\r\n        /*\r\n\r\n        Untuk Accounts Xolura\r\n\r\n        */\r\n\r\n        var isSafari = !!navigator.userAgent.match(/Version\\/[\\d\\.]+.*Safari/);\r\n        var iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\r\n\r\n        if (isSafari || iOS) {\r\n\r\n            alert('Anda tidak akan menerima notifikasi')\r\n\r\n        } else{\r\n\r\n            NotificationFactory.requestPermission()\r\n            .then(function (permission) {\r\n\r\n                if (!localStorage.getItem(\"token\") && localStorage.getItem(\"solumax_jwt_token\")) {\r\n\r\n                    console.log(\"Storing Token to Device Table\")\r\n\r\n                    NotificationFactory.getToken()\r\n                    .then(function (token) {\r\n\r\n                        DeviceModel.store({\r\n                            token: token,\r\n                            user_type: 'AccountsXolura'\r\n                        }).then(function (res) {\r\n                            localStorage.setItem('token', res.data.data.token)\r\n                        })\r\n                    })\r\n                }\r\n\r\n            }, function (err) {\r\n                alert('Anda tidak akan menerima notifikasi')\r\n                console.log(err)\r\n            })\r\n\r\n        }\r\n\r\n        messaging.onMessage(function (payload) {\r\n\r\n            console.log(\"Message received. \", payload);\r\n            navigator.serviceWorker.ready.then(function (reg) {\r\n                reg.showNotification(payload.notification.title, payload.notification);\r\n            });\r\n        })\r\n\r\n\r\n        $rootScope.$on('AccountsXolura_LoggedOut', function (event, data) {\r\n\r\n            // Belum dibuat\r\n        })\r\n    })","solumaxGoogleFirebasePlugins    \r\n    .factory('DeviceModel', function(\r\n        $http) {\r\n\r\n        var deviceModel = {}\r\n\r\n        var baseUrl = '/solumax/google-firebase/device/';\r\n\r\n        deviceModel.index = function(token) {\r\n            return $http.get(baseUrl  +  token)\r\n        }\r\n\r\n        deviceModel.get = function(id) {\r\n            return $http.get(baseUrl, id)\r\n        }\r\n\r\n        deviceModel.store = function(device) {\r\n            return $http.post(baseUrl, device)\r\n        }\r\n\r\n        deviceModel.update = function(id, device) {\r\n            return $http.post(baseUrl + id, device)\r\n        }\r\n\r\n        deviceModel.subscribe = function(token, body) {\r\n            return $http.post(baseUrl + token + '/subscribe/', body)\r\n        }\r\n\r\n        deviceModel.unsubscribe = function(token, body) {\r\n            return $http.post(baseUrl + token + '/unsubscribe/', body)\r\n        }\r\n\r\n        deviceModel.delete = function(id) {\r\n            return $http.delete(baseUrl + id)\r\n        }\r\n\r\n        return deviceModel\r\n    })","solumaxGoogleFirebasePlugins\r\n    .factory('NotificationFactory', function(\r\n        $q) {\r\n\r\n        var notificationFactory = {}\r\n\r\n        notificationFactory.requestPermission = function() {\r\n\r\n            return $q(function(resolve, reject) {\r\n\r\n                messaging.requestPermission()\r\n                    .then(function(permission) {\r\n                        resolve(permission)\r\n                    }).catch(function(err) {\r\n                        reject(err)\r\n                    })\r\n            })\r\n        }\r\n\r\n        notificationFactory.getToken = function() {\r\n\r\n            return $q(function(resolve, reject) {\r\n\r\n                messaging.getToken()\r\n                    .then(function(currentToken) {\r\n                        resolve(currentToken)\r\n                    }).catch(function(err) {\r\n                        reject(err)\r\n                    })\r\n            })\r\n        }\r\n\r\n        return notificationFactory\r\n    })","solumaxGoogleFirebasePlugins    \r\n    .factory('TopicFactory', function(\r\n        $http) {\r\n\r\n        var deviceModel = {}\r\n\r\n        var baseUrl = '/solumax/google-firebase/topic/';\r\n\r\n        deviceModel.subscribe = function(device) {\r\n            return $http.post(baseUrl + topic + '/subscribe/', body)\r\n        }\r\n\r\n        deviceModel.unsubscribe = function(topic, body) {\r\n            return $http.post(baseUrl + topic + '/unsubscribe/', body)\r\n        }\r\n\r\n        deviceModel.delete = function(id) {\r\n            return $http.delete(baseUrl + id)\r\n        }\r\n\r\n        return deviceModel\r\n    })","solumaxGoogleFirebasePlugins\r\n    .directive('notificationCustomer', function (\r\n        DeviceModel, NotificationFactory, $window) {\r\n\r\n        return {\r\n\r\n            templateUrl: '/solumax/google-firebase/plugins/app/notification/directive/customer/notificationCustomer.html',\r\n            restrict: 'AE',\r\n            scope: {\r\n                topic: '@',\r\n                entityId: '@',\r\n                entityName: '@',\r\n                tenantId:'@'\r\n            },\r\n            link: function (scope, elem, attrs) {\r\n\r\n                if (!localStorage.getItem('token')) {\r\n                    $window.onload = function () {\r\n\r\n                        $('#notification-modal').modal('show')\r\n\r\n                    };\r\n                }\r\n\r\n\r\n                scope.subscribe = function () {\r\n\r\n                    NotificationFactory.getToken()\r\n                        .then(function (token) {\r\n\r\n                            DeviceModel.store({\r\n                                token: token,\r\n                                user_type: 'Entity',\r\n                                user_id: scope.entityId,\r\n                                user_name: scope.entityName,\r\n                                tenant_id:scope.tenantId\r\n                            })\r\n                                .then(function (res) {\r\n                                    localStorage.setItem('token', res.data.data.token)\r\n                                })\r\n                        })\r\n\r\n                }\r\n            }\r\n        }\r\n    })\r\n","solumaxGoogleFirebasePlugins\r\n.directive('notificationInternal', function(\r\n    ConfigModel,\r\n    DeviceModel, NotificationFactory) {\r\n\r\n    return {\r\n        templateUrl: '/solumax/google-firebase/plugins/app/notification/directive/internal/notificationInternal.html',\r\n        restrict: 'AE',\r\n        scope: {\r\n                topic: '@', // {\"sales_order_generate\":\"SPK dibuat\",\"sales_order_request\":\"SPK direquest\"}\r\n            },\r\n            link: function(scope, elem, attrs) {\r\n\r\n                scope.modalId = Math.random().toString(36).substring(2, 7)\r\n\r\n                scope.updateStatus = function(topic) {\r\n\r\n                    var topicCode = topic.code;\r\n\r\n                    if (!topic.subscribe) {\r\n                        scope.unsubscribe(topicCode)\r\n                    } else {\r\n                        scope.subscribe(topicCode)\r\n                    }\r\n                }\r\n\r\n                scope.subscribe = function(topic) {\r\n\r\n                    NotificationFactory.getToken()\r\n\r\n                        .then(function(token) {\r\n\r\n                            DeviceModel.store({\r\n                                    token: token,\r\n                                    user_type: 'AccountsXolura',\r\n                                })\r\n                                .then(function(res) {\r\n                                    DeviceModel.subscribe(token, { topic: topic })\r\n                                })\r\n                        })\r\n\r\n                    $('#notification-' + scope.modalId).modal('hide')\r\n                }\r\n\r\n                scope.unsubscribe = function(topic) {\r\n\r\n                    NotificationFactory.getToken()\r\n                        .then(function(token) {\r\n                            DeviceModel.unsubscribe(token, { topic: topic })\r\n                        })\r\n\r\n                    $('#notification-' + scope.modalId).modal('hide')\r\n                }\r\n\r\n\r\n                scope.loadTopics = function() {\r\n\r\n                    NotificationFactory.getToken()\r\n                        .then(function(token) {\r\n\r\n                            ConfigModel.get('solumax.googleFirebase.topicGroups')\r\n                                .then(function(res) {\r\n\r\n                                    scope.topicGroups = _.get(res.data.data, attrs.topic, []);\r\n\r\n                                    DeviceModel.index(token)\r\n                                        .then(function(res) {\r\n\r\n                                            scope.topics = res.data.data.rel.topics\r\n                                            _.each(scope.topicGroups, function(topicGroup) {\r\n                                                _.map(scope.topics, function(key, val) {\r\n                                                    if (topicGroup.code == val) {\r\n                                                        topicGroup.subscribe = true;\r\n                                                    }\r\n                                                })\r\n\r\n                                            })\r\n                                        })\r\n                                })\r\n                        })\r\n                }\r\n                \r\n                scope.loadTopics()\r\n            }\r\n        }\r\n    })"]}